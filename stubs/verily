#!/bin/bash


#Verily Deps
VERILY_HOME=$(/usr/bin/verily-env -home)
VERILY_CP=$(/usr/bin/verily-env -cp)
CP=""
RUN="NO"


# Deps from the project

case "$*" in
(*-run*) RUN="YES";;
esac

if [[ $RUN == "YES" ]]; then

    UPDATE_DEPS="YES"
    DAEMON="NO"

    # the -fast option will specify that we should not try to recompute deps

    # the -nocompile disables Verily from compiling before it runs (only used in development)

    while getopts ":a" opt; do
	case $opt in
	    a)
		UPDATE_DEPS="NO"
		;;
		d)
		DAEMON="YES"
		;;
	esac
    done

    if [[ $UPDATE_DEPS == "YES" ]]; then
	mvn dependency:copy-dependencies
	if [ $? -ne 0 ]; then
            exit $?
	fi
    else
	echo "Running Verily application without updating dependencies..."
    fi


    # update the package

    #mvn package
    #mvn compile
    #if [ $? -ne 0 ]; then
    #    exit $?
    #fi

    # Add everything this depends on to the classpath...

    CP=""

    rm target/dependency/slf4j*.jar > /dev/null 2>&1
    rm target/dependency/jmlruntime*.jar > /dev/null 2>&1


    for jar in "target/dependency"/*.jar
    do
	CP="$jar:${CP}"
    done


    #for jar in "target"/*.jar
    #do
	#CP="$jar:${CP}"
    #done

fi

#
# Background startup is handled in the startup script, since there are platform specific details
#
eval "java"  -cp "target/classes/:${VERILY_CP}:${CP}" VerilyMain -z3 "${VERILY_HOME}/tools/z3-4.3.2-unix" -jml "${VERILY_HOME}/tools/openjml" "$@"


